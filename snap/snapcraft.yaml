name: rpi-imager
base: core20
adopt-info: imagewriter
summary: Raspberry Pi Imager
website: https://www.raspberrypi.com/software/
source-code: https://github.com/raspberrypi/rpi-imager
issues: https://github.com/waveform80/imager-snap
description: |
  Use Raspberry Pi Imager for an easy way to install Raspbian and other
  operating systems to an SD card ready to use with your Raspberry Pi
compression: lzo
grade: stable
confinement: strict

apps:
  rpi-imager:
    command: bin/desktop-launch $SNAP/usr/local/bin/rpi-imager
    environment:
        DISABLE_WAYLAND: 1
    plugs:
      - x11
      - opengl
      - network
      - desktop
      - desktop-legacy
      - home
      - removable-media
      - mount-observe
      - network-manager # required to grab image
      - network-control
      - cifs-mount
      - udisks2 # required for writing to sd card
      - hardware-observe # required to find card with lsblk

parts:
  desktop-qt5:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: qt
    plugin: make
    make-parameters: ["FLAVOR=qt5"]
    build-packages:
      - build-essential
      - qtbase5-dev
      - dpkg-dev
    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - adwaita-icon-theme
      - gnome-themes-standard
      - shared-mime-info
      - libqt5gui5
      - libgdk-pixbuf2.0-0
      - libqt5svg5 # for loading icon themes which are svg
      - try: [appmenu-qt5] # not available on core18
      - locales-all
      - xdg-user-dirs
      - fcitx-frontend-qt5
  imagewriter:
    plugin: cmake
    cmake-parameters:
      - -DENABLE_CHECK_VERSION=OFF
    source: https://github.com/raspberrypi/rpi-imager.git
    source-subdir: src
    source-type: git
    override-pull: |
      snapcraftctl pull
      last_committed_tag="$(git describe --tags `git rev-list --tags --max-count=1`)"
      last_committed_tag_ver="$(echo ${last_committed_tag} | sed 's/v//' )"
      last_released_tag="$(snap info $SNAPCRAFT_PROJECT_NAME | awk '$1 == "latest/beta:" { print $2 }')"
      # If the latest tag from the upstream project has not been released to
      # beta, build that tag instead of master.
      if [ "${last_committed_tag_ver}" != "${last_released_tag}" ]; then
        git fetch
        git checkout "${last_committed_tag}"
        echo "Setting version to $last_committed_tag"
        snapcraftctl set-version "${last_committed_tag_ver}"
      else
        echo "Setting version to $(git rev-parse --short HEAD)"
        snapcraftctl set-version "$(git rev-parse --short HEAD)"
      fi
    stage-packages:
      - qml-module-qtquick2
      - qml-module-qtquick-controls2
      - qml-module-qt-labs-settings
      - qml-module-qtquick-layouts
      - qml-module-qtquick-templates2
      - qml-module-qtquick-window2
      - qml-module-qtgraphicaleffects
      - dosfstools
      - fdisk
      - libarchive13
      - libasn1-8-heimdal
      - libcurl4
      - libgssapi3-heimdal
      - libhcrypto4-heimdal
      - libheimbase1-heimdal
      - libheimntlm0-heimdal
      - libhx509-5-heimdal
      - libkrb5-26-heimdal
      - libldap-2.4-2
      - libnghttp2-14
      - libpsl5
      - libroken18-heimdal
      - librtmp1
      - libsasl2-2
      - libwind0-heimdal
      - util-linux # needed for lsblk
      - qtwayland5
      - on arm64:
        - libgles2
    build-packages:
      - build-essential
      - devscripts
      - libarchive-dev
      - libcurl4-openssl-dev
      - qtbase5-dev
      - qtbase5-dev-tools
      - qtdeclarative5-dev
      - qttools5-dev-tools
      - qttools5-dev
      - libqt5svg5-dev
      - libssl-dev
